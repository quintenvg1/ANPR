# USAGE
# python add_lplate_desc_to_xml.py --labelFile ../../datasets/lplates_smallset/hand_labelled/images_labelled/labels.txt \
# --imglabXmlFileIn ../../datasets/lplates_smallset/hand_labelled/images_labelled/plateAnnotations.xml  \
# --imglabXmlFileOut ../../datasets/lplates_smallset/hand_labelled/images_labelled/plateAnnotationsWithChars.xml
# Read the labels file generated by labelImages.py, and add the license plate text to the
# xml file generated by imglab

import re
import numpy as np
from collections import namedtuple
import cv2
import argparse
import os
import sys

# construct the argument parse and parse the arguments
ap = argparse.ArgumentParser()
ap.add_argument("-l", "--labelFile", required=True,
	help="path to labels file")
ap.add_argument("-i", "--imglabXmlFileIn", required=True,
	help="path to imglab xml input file")
ap.add_argument("-o", "--imglabXmlFileOut", required=True,
	help="path to imglab xml output file")
args = vars(ap.parse_args())

# Check arguments
if os.path.exists(args["labelFile"]) == False:
  print("[ERROR]: --labelFile \"{}\" does not exist".format(args["labelFile"]))
  sys.exit()
if os.path.exists(args["imglabXmlFileIn"]) == False:
  print("[ERROR]: --imglabXmlFileIn \"{}\" does not exist".format(args["imglabXmlFileIn"]))
  sys.exit()
if os.path.exists(args["imglabXmlFileOut"]) == True:
  print("[ERROR]: --imglabXmlFileOut \"{}\" already exists. Delete old file before running".format(args["imglabXmlFileOut"]))
  sys.exit()


test_str = ("<?xml version='1.0' encoding='ISO-8859-1'?>\n"
            "<?xml-stylesheet type='text/xsl' href='image_metadata_stylesheet.xsl'?>\n"
            "<dataset>\n"
            "<name>imglab dataset</name>\n"
            "<comment>Created by imglab tool.</comment>\n"
            "<images>\n"
            "  <image file='unique_set/2017-05-19_06.41.52-06.42.23_96.jpg'>\n"
            "    <box top='8' left='1556' width='204' height='99'/>\n"
            "  </image>\n"
            "  <image file='unique_set/2017-05-19_08.01.36-08.02.30_190.jpg'>\n"
            "    <box top='61' left='1325' width='208' height='97'/>\n"
            "  </image>\n"
            "</images>\n"
            "</dataset>")

# Read the xml input file, and strip the all the image data and replace with placeholder
xmlFileIn = open(args["imglabXmlFileIn"], "r")
xmlText = xmlFileIn.read()
regex = r"(^.*?<images>).*?(</images>.*?$)"
matches = re.search(regex, xmlText, re.DOTALL)
xmlTextOut = matches.group(1) + "\nPLACE_ANN_TEXT_HERE\n" + matches.group(2)

# read the labels file and copy to dictionary
labelFile = open(args["labelFile"], "r")
labels = labelFile.read()
labelsSplit = [s.strip().split(",") for s in labels.splitlines()]
labelsSplit = np.array(labelsSplit)
labelsDict = dict()
keys = labelsSplit[:,0]
values = labelsSplit[:,1]
for i in np.arange(len(keys)):
  labelsDict[keys[i]] = values[i].upper()
numberOfLabels = len(keys)
print("[INFO] Number of plates in the dataset: {}".format(numberOfLabels))

# parse the xml file, and create a list of "image file" data
images = re.findall(r".*<images>(.*)</images>",xmlText,re.DOTALL)
imageList = re.findall(r"<image file='(.*)'>\n(.*<box .*)/>",images[0])

# Loop through all the image files listed in xml input file
# Check to see that the image file is listed in labels file, and then add the license plate text to
# the xml box field
annText = ""
for (i, image) in enumerate(imageList):
  #print("Image #{}:\n{}".format(i,image))
  annText += "  <image file='" + image[0] + "'>\n"
  annText +=  image[1]
  imageFileName = image[0].split('/')[-1]
  if imageFileName in labelsDict:
    annText += " desc='" + labelsDict[imageFileName] + "'"
  else:
    print("[ERROR] Cannot find {} in {}".format(image[0], args["labelFile"]))
  annText += "/>\n  </image>\n"

# Add the new annotation text, and save to file
xmlTextOut = re.sub("PLACE_ANN_TEXT_HERE", annText, xmlTextOut)
xmlFileOut = open(args["imglabXmlFileOut"], "w")
xmlFileOut.write(xmlTextOut)
xmlFileOut.close()




