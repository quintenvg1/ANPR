# USAGE
# python crop_image_and_ann_filename.py --imagePath ../../datasets/lplates_smallset/hand_labelled/images_labelled/img \
# --annFile ../../datasets/lplates_smallset/hand_labelled/images_labelled/plateAnnotationsWithLabels.xml  \
# --outPath ../../datasets/lplates_smallset/hand_labelled/images_cropped_and_labelled

# Read the xml file that is generated by imglab, and modified by add_lplate_desc_to_xml.py to add lplate text.
# The xml file should contain the image filename, the plate location and the plate text
# Read the image data from file, crop the license plate, write the lplate image to a new file with
# filename N_LP_1.png, where N = 00000000, 00000001, ..., and LP = license plate text
# Note that that a seperate annotation file is no longer required as the image only contains the lplate
# and the filename contains the plate text

# import the necessary packages
import os
import sys
# enable search for base2designs module directory in parent directory
sys.path.append(os.path.split(os.getcwd())[0])
from base2designs.preprocessing import SimplePreprocessor
from base2designs.datasets import AnprDatasetLoader
import argparse
import cv2


# construct the argument parse and parse the arguments
ap = argparse.ArgumentParser()
ap.add_argument("-i", "--imagePath", required=True,
	help="path to input dataset")
ap.add_argument("-a", "--annFile", required=True,
	help="path to annotations file")
ap.add_argument("-o", "--outPath", required=True,
	help="path to output images")
args = vars(ap.parse_args())

# Check arguments
paths = [args["imagePath"], args["annFile"]]
messages = ["image path",  "annotation file"]
for (path, message) in zip(paths, messages):
  if os.path.exists(path) == False:
    print("[ERROR]: {}\"{}\" does not exist".format(message, path))
    sys.exit()
if os.path.exists(args["outPath"]) == True:
  print("[ERROR]: --outPath \"{}\" already exists. Delete old directory before running".format(args["outPath"]))
  sys.exit()
os.mkdir(args["outPath"])

# load the images from disk and process
print("[INFO] loading images...")
sp = SimplePreprocessor(128,64)
adl = AnprDatasetLoader(preprocessors=[sp])
(data, labels, winLocs, fileNames, plateCnts) = adl.loadData(args["imagePath"], args["annFile"], verbose=30, margin=0)

# Save cropped images back to disk with plate text embedded in the filenames
print("\n[INFO] saving images...")
for (i,image) in enumerate (data):
  plateText = labels[i]
  filePath = args["outPath"] + "/{:08d}_{}_1.png".format(i, plateText[:7])
  cv2.imwrite(filePath, image)


